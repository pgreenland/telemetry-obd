#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# Print the IP address
_IP=$(hostname -I) || true
if [ "$_IP" ]; then
  printf "My IP address is %s\n" "$_IP"
fi


# BEGIN TELEMETRY-OBD SUPPORT

# Enable Debugging Support
if [ ! -f "/tmp/rc.local" ]
then
	exec /bin/bash -x /etc/rc.local > /tmp/rc.local 2>&1
fi

# Delay to allow Bluetooth subsystem to fully activate
sleep 20

## Bind the available paired OBDII device to /dev/rfcomm0
## Change the Bluetooth MAC addresses in the next line to match your's
for BT_MAC_ADDR in "00:04:3E:5D:00:00" "00:19:5D:26:00:00"
do
	bluetoothctl connect "${BT_MAC_ADDR}" > /tmp/btctl-connect
	grep "Connected: yes" /tmp/btctl-connect > /dev/null
	RtnCode="$?"
	if [ "${RtnCode}" -eq 0 ]
	then
		rfcomm bind rfcomm0 "${BT_MAC_ADDR}"
		echo "${BT_MAC_ADDR}" bound to /dev/rfcomm0
		break
	fi
done

## Run the script RaspberryPi-Auto-Run.sh as user "${OBD_USER}" and group "dialout"
export OBD_USER=human
export OBD_HOME="/home/${OBD_USER}"
runuser -u "${OBD_USER}" -g dialout "${OBD_HOME}/telemetry-obd/bin/obd_logger.sh" > /tmp/obd-log.$$ 2>&1

# END TELEMETRY-OBD SUPPORT

exit 0
